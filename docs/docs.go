// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://swagger.io",
            "email": "support@example.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/attendance/clock-out": {
            "post": {
                "description": "Record the clock-out time for an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Clock-out for an employee",
                "parameters": [
                    {
                        "description": "Employee ID",
                        "name": "clockOutRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.clockOutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/salary/pay": {
            "post": {
                "description": "Record a salary payment for an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Salary"
                ],
                "summary": "Pay salary to an employee",
                "parameters": [
                    {
                        "description": "Salary payment data",
                        "name": "PaySalaryRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.PaySalaryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/salary/{id}": {
            "get": {
                "description": "Retrieve salary payment details using salary ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Salary"
                ],
                "summary": "Get salary payment by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Salary ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SalaryPayment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sales": {
            "post": {
                "description": "Register a new sales transaction for an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Create a sales transaction",
                "parameters": [
                    {
                        "description": "Sale data",
                        "name": "createSaleRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.createSaleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sales/employee/{employee_id}": {
            "get": {
                "description": "Get total sales count and amount by employee ID and date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Get sales by employee and date",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date in YYYY-MM-DD format",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "delivery.PaySalaryRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "employee_id": {
                    "type": "integer"
                },
                "paid_at": {
                    "description": "можно не указывать и взять time.Now()",
                    "type": "string"
                },
                "pay_period_end": {
                    "type": "string"
                },
                "pay_period_start": {
                    "description": "строка, чтобы потом распарсить \"YYYY-MM-DD\"",
                    "type": "string"
                }
            }
        },
        "delivery.clockOutRequest": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "integer"
                }
            }
        },
        "delivery.createSaleRequest": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "item_id": {
                                "type": "integer"
                            },
                            "price_at_sale": {
                                "type": "number"
                            },
                            "quantity": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "payment_method": {
                    "type": "string"
                },
                "shop_id": {
                    "type": "integer"
                }
            }
        },
        "models.SalaryPayment": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "employeeID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "paidAt": {
                    "type": "string"
                },
                "payPeriodEnd": {
                    "type": "string"
                },
                "payPeriodStart": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Sales & Operations API",
	Description:      "Backend API for managing sales, salaries, and attendance",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
